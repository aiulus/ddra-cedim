% gray_compLinearDT_pedestrian
%   DDRA linear demo on CORA's pedestrian model + gray-box conformance ID.
%
% Prereqs:
%   - custom_loadDynamics.m (with 'pedestrian' case)
%   - cora_to_matlab_ss.m
%   - ddra_linear.m
%   - conformance_gray.m (our wrapper)

%% 0) Shared setup ---------------------------------------------------------
rng(1,'twister');  % keep everything reproducible

% -- System (CORA) -> MATLAB ss for DDRA demo
dyn  = "pedestrian";
type = "standard";  % for the DDRA comparison block
[sys_cora, ~, ~] = custom_loadDynamics(dyn, type);
sys_ddra = cora_to_matlab_ss(sys_cora);

dim_x = size(sys_ddra.A, 1);
dim_u = size(sys_ddra.B, 2);    % NOTE: for 'pedestrian', this is 4 (= 2 inputs + 2 meas. noise)
dim_y = size(sys_ddra.C, 1);    % = 2

% DDRA plotting (optional)
plot_settings = struct();
plot_settings.projectedDims = {[1 2],[3 4]};

%% 1) DDRA Linear (for side-by-side intuition) ----------------------------
lookup_ddra = struct( ...
    'n_s', 1, ...
    'n_m', 1, ...
    'n_k', 120, ...
    'n_k_val', 20, ...
    'eta_x', 1, ...
    'alpha_x', 0.1, ...
    'c_x', ones(dim_x,1), ...
    'c_delta_x', zeros(dim_x,1), ...
    'eta_u', 1, ...
    'alpha_u', 0.25, ...
    'c_u', ones(dim_u, 1), ...
    'c_delta_u', zeros(dim_u, 1), ...
    'c_w', zeros(dim_x, 1), ...
    'alpha_w', 0.005, ...
    'eta_w', 1, ...
    'c_v', zeros(dim_x, 1), ...
    'alpha_v', 0.0, ...
    'eta_v', 1, ...
    'dim_x', dim_x, ...
    'dim_y', dim_y, ...
    'dim_u', dim_u, ...
    'plot_settings', plot_settings ...
);

% DDRA set propagation (model vs data)
[X_true, X_est] = ddra_linear(sys_ddra, lookup_ddra);

%% 2) Gray-box Reachset-Conformance ID ------------------------------------
% We follow CORA's gray example: use 'rand' type to expose parameters + allow U-center adaptation.
lookup_gray = struct( ...
    'sys', struct('dyn', dyn, 'type', "rand"), ...
    ... % identification data config (CORA gray example defaults)
    'n_m', 5, ...     % number of distinct input trajectories
    'n_s', 30, ...    % sample trajectories per input trajectory
    'n_k', 4, ...     % trajectory length (ID)
    ... % validation config (match example)
    'n_m_val', 2, ...
    'n_s_val', 30, ...
    'n_k_val', 4, ...
    ... % methods + constraints (can override)
    'methodsGray', ["graySeq","grayLS","graySim"], ...
    'constraints', "half" ...
);

% Reachability and conformance options (aligned with example_nonlinearSysDT_conform_02_gray)
options_reach = struct();
options_reach.zonotopeOrder      = 100;
options_reach.tensorOrder        = 2;
options_reach.errorOrder         = 1;
options_reach.tensorOrderOutput  = 2;
options_reach.verbose            = false;

conf_opts_gray = struct( ...
    'options_reach', options_reach, ...
    'cs', struct('robustnessMargin', 1e-9, 'cost', "interval", 'verbose', false), ...
    'testS', struct('p_extr', 0.3) ...
);

% Run gray-box conformance wrapper (builds suites, identifies, validates, and plots)
R = conformance_gray(lookup_gray, conf_opts_gray); 

