% gray_compLinearDT_pedestrian
%   DDRA linear demo on CORA's pedestrian model + gray-box conformance ID.
%
% Prereqs:
%   - custom_loadDynamics.m (with 'pedestrian' case)
%   - cora_to_matlab_ss.m
%   - ddra_linear.m
%   - conformance_gray.m (our wrapper)

%% 0) Shared setup ---------------------------------------------------------
rng(1,'twister');  % keep everything reproducible

% -- System (CORA) -> MATLAB ss for DDRA demo
dyn  = "lorenz";
type = "rand";  % for the DDRA comparison block
[sys_cora, ~, ~] = custom_loadDynamics(dyn, type);
%% TODO conversion method from loadDynamics()
[sys_ddra, handle] = cora_to_ddra_nonlinear(dyn,"standard");

dim_x = sys_cora.nrOfStates;
dim_u = sys_cora.nrOfInputs;    
dim_y = sys_cora.nrOfOutputs;   

% DDRA plotting (optional)
plot_settings = struct();
plot_settings.projectedDims = {[1 2], [2,3]};


%% 1) DDRA Linear (for side-by-side intuition) ----------------------------
lookup_ddra = struct( ...
    'n_s', 30, ...
    'n_s_val', 30, ...
    'n_m', 5, ...
    'n_m_val', 2, ...
    'n_k', 4, ...
    'n_k_val', 4, ...
    'eta_x', 1, ...
    'alpha_x', 0.1, ...
    'c_x', ones(dim_x,1), ...
    'c_delta_x', zeros(dim_x,1), ...
    'eta_u', 1, ...
    'alpha_u', 0.25, ...
    'c_u', ones(dim_u, 1), ...
    'c_delta_u', zeros(dim_u, 1), ...
    'c_w', zeros(dim_x, 1), ...
    'alpha_w', 0.005, ...
    'eta_w', 1, ...
    'c_v', zeros(dim_x, 1), ...
    'alpha_v', 0.0, ...
    'eta_v', 1, ...
    'dim_x', dim_x, ...
    'dim_y', dim_y, ...
    'dim_u', dim_u, ...
    'plot_settings', plot_settings ...
);

lookup_ddra.stepsLip = 1; 
lookup_ddra.initpointsLip = 50;
lookup_ddra.normType = 2; 
lookup_ddra.addZeps = true;

[X_true, X_est, out] = ddra_nonlinear(sys_ddra, lookup_ddra);

%% 2) Gray-box Reachset-Conformance ID ------------------------------------
lookup_gray = struct( ...
    'sys', struct('dyn', dyn, 'type', "rand"), ...
    ... % identification data config (CORA gray example defaults)
    'n_s', 30, ...
    'n_s_val', 30, ...
    'n_m', 5, ...
    'n_m_val', 2, ...
    'n_k', 4, ...
    'n_k_val', 4, ...
    ... % methods + constraints (can override)
    'methodsGray', ["graySeq","grayLS","graySim"], ...
    'constraints', "half" ...
);

% Reachability Settings  
options_reach = struct();
options_reach.zonotopeOrder = 100;
options_reach.tensorOrder = 2;
options_reach.errorOrder = 1;
options_reach.tensorOrderOutput = 2;
options_reach.verbose = false;

plot_settings = struct();
plot_settings.plot_Yp = false; 
plot_settings.projectedDims = {[1 2], [2,3]};

lookup_gray.plot_settings = plot_settings;

conf_opts_gray = struct( ...
    'options_reach', options_reach, ...
    'cs', struct('robustnessMargin', 1e-9, 'cost', "interval", 'verbose', false), ...
    'testS', struct('p_extr', 0.3) ...
);

% Run gray-box conformance wrapper (builds suites, identifies, validates, and plots)
R = conformance_gray(lookup_gray, conf_opts_gray); 

